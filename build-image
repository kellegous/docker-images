#!/usr/bin/env python3

import argparse
import os
import subprocess
import sys

def get_version(root):
    p = subprocess.Popen(
        ['git', 'rev-parse', 'HEAD'],
        stdout=subprocess.PIPE,
        cwd=root)
    out, _ = p.communicate()
    return out.decode('utf-8').strip()

class Image(object):
    def __init__(self, name, tag, dockerfile):
        self.name = name
        self.tag = tag
        self.dockerfile = dockerfile

    def full_name(self):
        return "{}:{}".format(self.name, self.tag)
    
    def build(self):
        return subprocess.call([
            'docker',
            'build',
            '-f', self.dockerfile,
            '-t', self.full_name(),
            os.path.dirname(self.dockerfile)
        ]) == 0
    
    def push(self):
        return subprocess.call([
            'docker',
            'push',
            self.full_name(),
        ]) == 0
    
    def tag(self, tag):
        img = Image(self.name, tag, self.dockerfile)
        if subprocess.call([
            'docker',
            'tag',
            self.full_name(),
            img.full_name()]) != 0:
            return None
        return img

def main():
    def image_from(root, name, tag):
        return Image(
            'kellegous/{}'.format(name),
            tag,
            os.path.join(root, name, 'Dockerfile'))
        
    root = os.path.abspath(os.path.dirname(__file__))
    version = get_version(root)

    parser = argparse.ArgumentParser()
    parser.add_argument('--latest', action='store_true',
        help="whether to tag the image as latest")
    parser.add_argument('--push', action='store_true',
        help="whether to push the image to hub.docker.com")
    parser.add_argument('images', nargs='+',
        help="images to build")
    args = parser.parse_args()

    tag = version[:7]

    images = [image_from(root, name, tag) for name in args.images]
    for image in images:
        if not image.build():
            return 1
        if args.push:
            if not image.push():
                return 1
        if args.latest:
            latest = image.tag('latest')
            if args.push:
                if not latest.push():
                    return 1
    return 0

if __name__ == '__main__':
    sys.exit(main())